import{_ as e,c as a,o as n,g as t}from"./app.0102bd72.js";const h='{"title":"vue3-boardgame Tic Tac Toe","description":"Build a classic Tic Tac Toe game using boardgame.io plugin for Vue 3","frontmatter":{"type":"article","title":"vue3-boardgame Tic Tac Toe","description":"Build a classic Tic Tac Toe game using boardgame.io plugin for Vue 3","date":"2022-02-20 20:00","cover":"/blog/public/tic-tac-toe-gf7da00999_1280.jpg"},"headers":[{"level":2,"title":"Project configuration","slug":"project-configuration"}],"relativePath":"articles/vue3-boardgame-tic-tac-toe.md","lastUpdated":1645208585425}',o={},s=t(`<p><em>Photo by pixel2013 on <a href="https://pixabay.com/images/id-1777859/" target="_blank" rel="noopener noreferrer">Pixabay</a></em></p><p>Hello and welcome back to Weekly OverVue! My name is Mac, and this week I&#39;ll show you how to build a Tic Tac Toe game using the <strong><a href="https://github.com/SaFrMo/vue3-boardgame/" target="_blank" rel="noopener noreferrer">vue3-boardgame</a></strong> plugin written by <a href="https://github.com/SaFrMo" target="_blank" rel="noopener noreferrer">Sander Moolin</a>. While this idea may seem generic and unambitious, I&#39;ve failed to find any proper examples showcasing Vue 3 and <a href="https://boardgame.io/" target="_blank" rel="noopener noreferrer">boardgame.io</a> together. So why not take the latter&#39;s own Tic Tac Toe tutorial, introducing some custom styling and the aforementioned plugin into the mix? With that said, let&#39;s get down to the setup.</p><h2 id="project-configuration" tabindex="-1">Project configuration <a class="header-anchor" href="#project-configuration" aria-hidden="true">#</a></h2><p>Now, begin by cloning the <em>Blank Canvas</em> template into a <code>tic-tac-toe</code> folder (feel free to choose any other name if you want) and installing all the dependencies, while also removing Pinia:</p><div class="language-shell"><pre><code>$ <span class="token function">git</span> clone https://github.com/weekly-overvue/blank-canvas.git tic-tac-toe
$ <span class="token builtin class-name">cd</span> tic-tac-toe
$ <span class="token function">npm</span> <span class="token function">install</span>
$ <span class="token function">npm</span> uninstall --save pinia
</code></pre></div><p>Once that&#39;s done, open up your favourite code editor and go to the <code>main.ts</code> file in <code>src</code> directory. Go ahead and remove these lines:</p><div class="language-typescript"><pre><code><span class="token comment">// ...</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createPinia <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><p>Then move over to <code>App.vue</code> file in that same folder. Remove the entire <code>&lt;header&gt;</code> element inside the <code>&lt;template&gt;</code>, as well as the <code>nav</code> element styling rule down in the <code>&lt;style&gt;</code> tag.</p>`,8),i=[s];function c(r,p,l,d,u,g){return n(),a("div",null,i)}var f=e(o,[["render",c]]);export{h as __pageData,f as default};
